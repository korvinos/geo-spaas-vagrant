---
#usepython\tasks\setup_python.yml
- name: Python | Change owner of install directory
  sudo: yes
  file: path="{{ install_dir }}" owner="{{ ansible_ssh_user }}"

- name: Python | Download Miniconda
  get_url:
    url: http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
    dest: "{{ cache_dir }}/miniconda.sh"

- name: Python | chmod Miniconda
  file: path="{{ cache_dir }}/miniconda.sh" mode=775

- name: Python | Install Miniconda
  shell: '{{ cache_dir }}/miniconda.sh -b -p {{ conda_dir }}'
  args:
    creates: '{{ conda_dir }}'

- name: Python | Create conda_pkgs in shared folder
  file: path="{{ cache_dir }}/conda_pkgs/empty" state=directory
  when: use_conda_cache is defined and use_conda_cache

- name: Python | Copy cached packages from conda_pkgs
  shell: 'cp {{ cache_dir }}/conda_pkgs/* {{ conda_dir }}/pkgs/ -r'
  when: use_conda_cache is defined and use_conda_cache

- name: Python | Update Miniconda
  shell: 'conda update -q --yes --copy conda'

- name: Python | Install Nansat requirements
  shell: 'conda install -q --yes --copy {{ item }}'
  with_items:
    scipy
    matplotlib
    nose
    pillow
    pyproj
    basemap
    netcdf4

- name: Python | Instal nansat-gdal and all requirements
  shell: 'conda install -q --yes --copy -c nersc nansat-gdal'

- name: Python | Copy downloaded packages to cached conda_pkgs
  shell: 'cp {{ conda_dir }}/pkgs/*.[bt][zx][2t] {{ cache_dir }}/conda_pkgs/'
  when: use_conda_cache is defined and use_conda_cache

- name: Python | Add PATH to .bashrc
  lineinfile: dest="{{ home_dir }}/.bashrc" line="export PATH={{ conda_dir }}/bin:$PATH"

- name: Python | Add GDAL_DATA to .bashrc
  lineinfile: dest="{{ home_dir }}/.bashrc" line="export GDAL_DATA={{ conda_dir }}/share/gdal"

- name: Python | Add links to some conda libraries to /usr/lib
  sudo: yes
  file: src="{{ conda_dir }}/lib/{{ item }}" dest="/usr/lib/{{ item }}" state=link
  with_items:
    - libgeos_c.so
    - libgdal.so

- name: Python | Run ldconfig
  sudo: yes
  shell: '/sbin/ldconfig'

- name: Python | Update/checkout Nansat
  git: repo=https://github.com/nansencenter/nansat
       dest="{{ dev_sources_dir }}/nansat/"
       version="{{ nansat_version }}"
       update=yes
  register: git_nansat

- name: Python | Install Nansat (always run to keep the pixel functions updated)
  shell: 'python setup.py build_ext --inplace'
  args:
    chdir: '{{ dev_sources_dir }}/nansat'

- name: Python | Create link from Python dist-packages to nansat
  file: path='{{ python_dist_packages }}/nansat'
        src='{{ dev_sources_dir }}/nansat/nansat'
        state=link
        force=yes