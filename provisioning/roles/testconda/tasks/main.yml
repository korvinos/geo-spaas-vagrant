---
- name: Install required system packages.
  apt: pkg={{ item }}
  sudo: yes
  with_items:
    - git
    - libgfortran3

- name: Create shared folder
  file: path="{{ shared_dir }}" state=directory

- name: Download Miniconda
  get_url:
    url: http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
    dest: "{{ shared_dir }}/miniconda.sh"

- name: chmod Miniconda
  file: path="{{ shared_dir }}/miniconda.sh" mode=775

- name: Install Miniconda
  shell: '{{ shared_dir }}/miniconda.sh -b -p {{ conda_dir }}'
  args:
    creates: '{{ conda_dir }}'

- name: Copy cahced packages from conda_pkgs
  shell: 'cp {{ shared_dir }}/conda_pkgs/* {{ conda_dir }}/pkgs/'

- name: Update Miniconda
  shell: '{{ exports }} conda update -q --yes --copy conda'
  args:
    creates: '{{ conda_dir }}/conda-meta/history'

- name: Install Nansat requirements
  shell: '{{ exports }} conda install -q --yes --copy {{ item }}'
  with_items:
    numpy
    scipy
    matplotlib
    nose
    pillow
    basemap
    proj.4
    netcdf4

- name: Instal nansat-gdal and all requirements
  shell: '{{ exports }} conda install -q --yes --copy -c alevin nansat-gdal'

- name: Copy downloaded packages to conda_pkgs
  shell: 'cp {{ conda_dir }}/pkgs/*.[bt][zx][2t] {{ shared_dir }}/conda_pkgs/'

- name: Replace nansat-gdal with specific version/build
  shell: '{{ exports }} conda install -q --yes --copy -c alevin nansat-gdal={{ nansat_gdal_version }}={{ nansat_gdal_build }}'
  when: nansat_gdal_build is defined

- name: Replace nansat-libgdal with specific version
  shell: '{{ exports }} conda install -q --yes --copy -c alevin nansat-libgdal={{ nansat_gdal_version }}={{ nansat_libgdal_build }}'
  when: nansat_libgdal_build is defined

- name: Update/checkout Nansat
  git: repo=https://github.com/nansencenter/nansat
       dest="{{ machine_shared_dir }}/nansat/"
       version=issue142split-mapper-tests
       update=yes
  register: git_nansat

- name: Install Nansat
  shell: '{{ exports }} python setup.py install'
  args:
    chdir: '{{ machine_shared_dir }}/nansat'
  when: git_nansat.changed

- name: Run Nansat basic tests
  shell: '{{ exports }} nosetests nansat.tests'
  when: git_nansat.changed

- name: Create test data folder
  file: path="{{ test_data_dir }}/{{ item.mapper }}" state=directory
  with_items:
    "{{ test_files }}"

- name: Download test data
  get_url: url="{{ test_data_url }}/{{ item.mapper }}/{{ item.name }}" dest="{{ test_data_dir }}/{{ item.mapper }}/{{ item.name }}" force=no
  with_items:
    "{{ test_files }}"

- name: Run Nansat mappers tests
  shell: "{{ exports }} nosetests -v -x end2endtests.test_mappers:TestAllMappers.test_mappers_basic"
  when: git_nansat.changed

- name: Run gdalinfo
  shell: '{{ exports }} gdalinfo {{ test_data_dir }}/{{ item.mapper }}/{{ item.name }}'
  with_items:
    "{{ test_files }}"
  ignore_errors: yes
  no_log: True

- name: Add exports .bashrc
  lineinfile: dest=/home/vagrant/.bashrc line="{{ exports }}"
