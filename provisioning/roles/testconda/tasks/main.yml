---
- name: Install required system packages.
  apt: pkg={{ item }} state=installed update-cache=yes
  sudo: yes
  with_items:
    - git
    - libgfortran3

- name: Create shared folder
  file: path="{{ shared_dir }}" state=directory

- name: Download Miniconda
  get_url:
    url: http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
    dest: "{{ shared_dir }}/miniconda.sh"

- name: chmod Miniconda
  file: path="{{ shared_dir }}/miniconda.sh" mode=775

- name: Install Miniconda
  shell: '{{ shared_dir }}/miniconda.sh -b -p {{ conda_dir }}'
  args:
    creates: '{{ conda_dir }}'

- name: Add Miniconda PATH to .bashrc
  lineinfile: dest=/home/vagrant/.bashrc line="export PATH={{ conda_dir }}/bin:$PATH"

- name: Update Miniconda
  shell: '{{ exports }}; conda update -q --yes conda'
  args:
    creates: '{{ conda_dir }}/conda-meta/history'

- name: Install Nansat requirements
  shell: '{{ exports }}; conda install -q --yes {{ item }}'
  with_items:
    numpy
    scipy
    matplotlib
    nose
    pillow
    basemap
    proj.4
    netcdf4

- name: Instal nansat-gdal and all requirements
  shell: '{{ exports }}; conda install -q --yes -c alevin nansat-gdal'

- name: Replace nansat-gdal with specific version/build
  shell: '{{ exports }}; conda install -q --yes -c alevin nansat-gdal={{ nansat_gdal_version }}={{ nansat_gdal_build }}'
  when: nansat_gdal_build is defined

- name: Replace nansat-libgdal with specific version
  shell: '{{ exports }}; conda install -q --yes -c alevin nansat-libgdal={{ nansat_gdal_version }}={{ nansat_libgdal_build }}'
  when: nansat_libgdal_build is defined

- name: Update/checkout Nansat
  git: repo=https://github.com/nansencenter/nansat
       dest="{{ shared_dir }}/nansat/"
       version=develop
       update=yes

- name: Install Nansat
  shell: '{{ exports }}; python setup.py install'
  args:
    chdir: '{{ shared_dir }}/nansat'

- name: Run Nansat basic tests
  shell: '{{ exports }}; nosetests nansat.tests'

- name: Create dir for mapper test data
  file: path="{{ mapper_test_data_dir }}" state=directory

- name: Run Nansat mappers tests
  shell: '{{ exports }}; nosetests end2endtests'
