---
- name: Install required system packages.
  apt: pkg={{ item }}
  sudo: yes
  with_items:
    - git
    - libgfortran3

- name: Create shared folder
  file: path="{{ shared_dir }}" state=directory

- name: Download Miniconda
  get_url:
    url: http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh
    dest: "{{ shared_dir }}/miniconda.sh"

- name: chmod Miniconda
  file: path="{{ shared_dir }}/miniconda.sh" mode=775

- name: Install Miniconda
  shell: '{{ shared_dir }}/miniconda.sh -b -p {{ conda_dir }}'
  args:
    creates: '{{ conda_dir }}'

- name: Update Miniconda
  shell: '{{ exports }} conda update -q --yes --copy conda'
  args:
    creates: '{{ conda_dir }}/conda-meta/history'

- name: Install Nansat requirements
  shell: '{{ exports }} conda install -q --yes --copy {{ item }}'
  with_items:
    numpy
    scipy
    matplotlib
    nose
    pillow
    basemap
    proj.4
    netcdf4

- name: Instal nansat-gdal and all requirements
  shell: '{{ exports }} conda install -q --yes --copy -c alevin nansat-gdal'

- name: Replace nansat-gdal with specific version/build
  shell: '{{ exports }} conda install -q --yes --copy -c alevin nansat-gdal={{ nansat_gdal_version }}={{ nansat_gdal_build }}'
  when: nansat_gdal_build is defined

- name: Replace nansat-libgdal with specific version
  shell: '{{ exports }} conda install -q --yes --copy -c alevin nansat-libgdal={{ nansat_gdal_version }}={{ nansat_libgdal_build }}'
  when: nansat_libgdal_build is defined

- name: Stop further provisioning
  shell: '/bin/false'


#- name: Add exports .bashrc
#  lineinfile: dest=/home/vagrant/.bashrc line="{{ exports }}"

#- name: Update/checkout Nansat
#  git: repo=https://github.com/nansencenter/nansat
#       dest="{{ shared_dir }}/nansat/"
#       version=issue142split-mapper-tests
#       update=yes

#- name: Install Nansat
#  shell: '{{ exports }} python setup.py install'
#  args:
#    chdir: '{{ shared_dir }}/nansat'

#- name: Run Nansat basic tests
#  shell: '{{ exports }} nosetests nansat.tests'

#- name: Create dir for mapper test data
#  file: path="{{ mapper_test_data_dir }}" state=directory

#- name: Run Nansat mappers tests
#  shell: '{{ exports }} nosetests -v -x end2endtests.test_mappers:TestAllMappers.test_mappers_basic'

#- name Run gdalinfo
#  shell: "{{ exports }} gdalinfo {{ mapper_test_data_dir }}/asar/ASA_WSM_1PNPDK20110108_205958_000000923098_00187_46322_6032.N1"
