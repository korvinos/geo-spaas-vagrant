---
#geo-spaas-vagrant\tasks\setup_python.yml
- name: Setup Python | Create condarc
  file: "path={{ home_dir }}/.condarc state=touch"

- name: Setup Python | Fix certifi breaking things
  lineinfile: "dest={{ home_dir }}/.condarc line='ssl_verify: false'"

- name: Setup Python | Install Nansencloud requirements
  shell: 'conda install -q --yes --copy -c conda-forge {{ item }}'
  with_items:
    django=1.9
    scikit-learn
    coverage
    psycopg2

- name: Setup Python | Install nansen-cloud requirements
  pip: name={{ item }}
  with_items:
    - django-forms-bootstrap
    - django-leaflet
    - ipdb

- name: Setup Python | Clone pysqlite
  git: repo=https://github.com/ghaering/pysqlite
       dest="{{ ansible_env.HOME }}/pysqlite/"
       version=da389878e7c0623cf188387b9fce4fc77d0a9b2c
       update=no
  register: git_pysqlite
  when: use_local_database is defined and use_local_database

- name: Setup Python | Install pysqlite
  shell: 'python setup.py install'
  args:
    chdir: "{{ ansible_env.HOME }}/pysqlite/"
  when: git_pysqlite.changed and use_local_database is defined and use_local_database

- name: Setup Python | Update/checkout Geo-SPaaS Django
  git: repo="https://github.com/nansencenter/{{ geospaas_repo }}"
       dest="{{ dev_sources_dir }}/{{ geospaas_repo }}"
       version="{{ geospaas_version }}"
       update=yes
       force="{{ git_force_geospaas }}"
  tags:
    - update-geospaas-catalog

- name: Setup Python | Create link from Python dist-packages to geo-spaas-catalog
  file: path='{{ python_dist_packages }}/{{ geospaas_app }}'
        src='{{ dev_sources_dir }}/{{ geospaas_repo }}/{{ geospaas_app }}'
        state=link
        force=yes

- name: Setup Python | Create link from home directory to nansen-cloud
  file: path="{{ home_dir }}/{{ geospaas_repo }}"
        src="{{ dev_sources_dir }}/{{ geospaas_repo }}"
        state=link
        force=yes
