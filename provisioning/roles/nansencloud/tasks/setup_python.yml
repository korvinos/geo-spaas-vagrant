---
#nansencloud\tasks\setup_python.yml

- name: Install Nansencloud requirements
  shell: 'conda install -q --yes --copy {{ item }}'
  with_items:
    django
    scikit-learn
    coverage
    jupyter
#Note: jupyter installs "certifi" which breaks the ssl-certificate verification, so that conda partially breaks (at least on centos)
#- need to disable checking certificates for now - FIX THIS (task "fixing certifi breaking things")

- name: Install nansen-cloud requirements
  pip: name={{ item }}
  with_items:
    - django-forms-bootstrap
    - django-leaflet
    - ipdb

- name: Clone pysqlite
  git: repo=https://github.com/ghaering/pysqlite
       dest="{{ ansible_env.HOME }}/pysqlite/"
       version=da389878e7c0623cf188387b9fce4fc77d0a9b2c
       update=no
  register: git_pysqlite
  when: use_local_database is defined and use_local_database

- name: Install pysqlite
  shell: 'python setup.py install'
  args:
    chdir: "{{ ansible_env.HOME }}/pysqlite/"
  when: git_pysqlite.changed
  when: use_local_database is defined and use_local_database

- name: Update/checkout OpenWind
  git: repo=https://github.com/nansencenter/openwind
       dest="{{ dev_sources_dir }}/openwind"
       version=develop
       update=yes

- name: Create link from Python dist-packages to openwind
  file: path='{{ python_dist_packages }}/openwind'
        src='{{ dev_sources_dir }}/openwind/openwind'
        state=link
        force=yes

- name: Update/checkout Nansen-Cloud Django
  git: repo=https://github.com/nansencenter/nansen-cloud
       dest="{{ dev_sources_dir }}/nansen-cloud"
       version="{{ nansencloud_version }}"
       update=yes

- name: Create link from Python dist-packages to nansen-cloud
  file: path='{{ python_dist_packages }}/nansencloud'
        src='{{ dev_sources_dir }}/nansen-cloud/nansencloud'
        state=link
        force=yes

- name: Create link from home directory to nansen-cloud
  file: path="{{ home_dir }}/nansen-cloud"
        src='{{ dev_sources_dir }}/nansen-cloud'
        state=link
        force=yes

#Override settings.py for non-local-db
- name: Override the settings.py file
  template: src=settings.py
            dest={{ project_path }}/project/settings.py
            backup=yes
  tags: 
    - update-nansencloud
  when: use_local_database is not defined or not use_local_database

- name: Run makemigrations on Nansen-Cloud project
  django_manage: >
      command=makemigrations
      app_path='{{ dev_sources_dir }}/nansen-cloud/project'
      settings='project.settings'
      pythonpath='{{ dev_sources_dir }}/nansen-cloud/project'

- name: Run migrate on Nansen-Cloud project
  django_manage: >
      command=migrate
      app_path='{{ dev_sources_dir }}/nansen-cloud/project'
      settings='project.settings'
      pythonpath='{{ dev_sources_dir }}/nansen-cloud/project'

- name: Add MAPPER_TEST_DATA_DIR to .bashrc
  lineinfile: dest=/home/vagrant/.bashrc line="export MAPPER_TEST_DATA_DIR={{ sample_data_dir }}"

- name: Add sample images to db
  django_manage: >
      command='ingest {{ sample_data_dir }}/{{ item.mapper }}/{{ item.name }}'
      app_path='{{ dev_sources_dir }}/nansen-cloud/project'
  with_items:
    - '{{ sample_files }}'

- name: Pip install extra packages for testing new functionalities
  pip: name={{ item }}
  sudo: yes
  with_items:
    - thredds_crawler
